paths:
  /api/user/current:
    get:
      summary: get current credenttial in cookie
      tags:
        - User
      consumes:
        - application/json
      parameters:
        - in: body
          name: login
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
                format: email
                description: email of user
              password:
                type: string
                format: password
                description: id of product
      responses:
        "302":
          description: Will redirect you to homepage if successfully logged
        "400":
          description: error server side
  /api/user/logout:
    get:
      summary: Add product to cart, if already exist will increment quantity
      tags:
        - Cart
      parameters:
        - name: cid
          in: path
          required: true
          description: id of cart
        - name: pid
          in: path
          required: true
          description: id of product
      responses:
        "200":
          description: returns cart object
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id: 
                    type: string
                    description: mongoid of the cart
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        product: 
                          type: string
                          description: mongoid of the product
                        quantity:
                          type: number
                          description: amount o items on the cart
                        _id: 
                          type: string
                          description: mongo id of the object in the cart (not really used, just refrence)
        "400":
          description: internal error
  /api/carts/{cartid}/product/{pid}:
    delete:
      summary: delete a product from the cart
      tags:
        - Cart
      parameters:
        - name: cartid
          in: path
          required: true
          description: id of cart
        - name: pid
          in: path
          required: true
          description: id of product
        - name: quantity
          in: query
          schema:
            type: number
          required: true
          description: quantity that is gonna be set
      responses:
        "200":
          description: returns acknowledged of the deletion of the product
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    description: status if the deleation success
                    defualt: success
                  acknowledged:
                    type: boolean
                    description: acknowledgedment of moongose that the produt had been deleted
                  productId:
                    type: string
                    description: id of the product deleted
                  cartId:
                    type: string
                    description: id of the cart that the product have been deleted
        "400":
          description: internal error
  /api/carts/{cartid}/product/{productid}:
    put:
      summary: delete a product from the cart
      tags:
        - Cart
      parameters:
        - name: cartid
          in: path
          required: true
          description: id of cart
        - name: productid
          in: path
          required: true
          description: id of product
      responses:
        "200":
          description: return the cart of the product modi
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id: 
                    type: string
                    description: mongoid of the cart
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        product: 
                          type: string
                          description: mongoid of the product
                        quantity:
                          type: number
                          description: amount o items on the cart
                        _id: 
                          type: string
                          description: mongo id of the object in the cart (not really used, just refrence)
        "400":
          description: internal error
  /api/carts/{cid}/purchase:
    post:
      summary: Purhsase de cart id given, this remove stock of the product and create a ticket object
      tags:
        - Cart
      parameters:
        - name: cartid
          in: path
          required: true
          description: id of cart
        - name: productid
          in: path
          required: true
          description: id of product
      responses:
        "200":
          description: return the ticket of the products purchased
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        "400":
          description: internal error
  /api/carts/{ccid}:
    delete:
      summary: Delete all the products in the cart
      tags:
        - Cart
      parameters:
        - name: ccid
          in: path
          required: true
          description: id of cart
      responses:
        "200":
          description: return the ticket of the products purchased
          content:
            application/json:
              schema:
                type: string
                description: message that indicates that cart was deleted
        "400":
          description: internal error
components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id generated by mongo
        first_name:
          type: string
          description: Fist name of the user
        last_name:
          type: string
          description: Las name of the user
        email:
          type: string
          format: email
          description: email of the user
        password:
          type: string
          format: password
          description: encripted password of the user
        age:
          type: number
          description: age of the user
        cart:
          $ref: '../../products/cart.yml#/components/schemas/Cart'
        role:
          type: string
          enum:
            - USER
            - ADMIN
            - PUBLIC
            - PREMIUM
          description: Role of the user, this give permission to certain actions
        resetLink:
          type: string
          description: generated link for the user to change his password
        documents:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: identification of the type of document
              refereance:
                type: string
                description: route of the document location
          description: documents of identification of the user, used to get PREMIUM role
          last_connection:
            type: string
            format: date
            description: las time the user logged
      required: 
        - first_name
        - email
        - password
        - cart
        - role
        - stock
        - code
        - status
        - category
        - owner
      example:
        _id: 65f54c17d38f2e0f51384963
        first_name: Coder
        last_name: Admin
        email: adminCoder@coder.com
        password: $2b$10$k1jvw53Jxqj7Aoku6g7VSOhkhbubcD7V5zOSuChL.SHPgJlCt2J.K
        role: ADMIN
        cart: 664df22a15e0c14a5e07daca
        last_connection: 2024-07-10T20:35:43.419+00:00
        documents: [
          {
            name: bankProof,
            reference: uploads/65f54c17d38f2e0f51384963/bankProof-0fd9eae7-62de-4bb3-b40c-3eda75c019c8.pdf,
            _id: 668781682c173da1c0be7885
          },
          {
            name: identification,
            reference: uploads/65f54c17d38f2e0f51384963/identification-1de417bf-df27-4953-a38f-e9bf3c4f996e.pdf,
            _id: 668781682c173da1c0be7887
          },
          {
            name: proofAdress,
            reference: uploads/65f54c17d38f2e0f51384963/proofAdress-c805e550-9730-476e-bf9c-e8714d601517.pdf,
            _id: 668781682c173da1c0be7889
          }
        ]

      