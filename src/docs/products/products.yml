paths:
  /api/products:
    get:
      summary: get all products with pagination
      tags:
        - Products
      parameters: 
        - in: query
          name: page
          schema:
            type: number
          description: The number of page to return
          default: 1
        - in: query
          name: limit
          schema:
            type: number
          description: The number of products to return per page
          default: 5
        - in: query
          name: sort
          schema:
            type: string
            enum:
              - desc
              - asc 
              - ascending
              - descending
          description: Sort the products by price ascending or descending
        - in: query
          name: status
          schema:
            type: boolean
          description: Return the products with the status false or true
        - in: query
          name: category
          schema:
            type: string
          description: Returns the products with the category is given
      responses:
        "200":
          description: get all products with pagination
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: status of the request
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                    description: array of products it contians
                  totalPages:
                    type: integer
                    description: Total pages returned with the configuration
                  prevPage: 
                    type: integer
                    escription: Number of the previous page
                  nextPage:
                    type: integer
                    description: Number of the next page
                  page:
                    type: integer
                    description:
                  hasPrevPage:
                    type: boolean
                    description:
                  hasNextPage:
                    type: boolean
                    description:
                  prevLink:
                    type: string
                    format: uri
                    description:
                  nextLink:
                    type: string
                    format: uri
                    description:
        "400":    
          description: bad request
  /api/products/{pid}/:
    get:
      summary: Return the product of the id given
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: id of the product
      responses:
        "200":
          description: returns an array with the product object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        "400":
          description: server side error
  /api/products/:
    post:
      summary: Return the product of the id given
      tags:
        - Products
      requestBody:
        description: Product data to upload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    description: indicates if the creation was succesful
                  product:
                    $ref: '#/components/schemas/Product'
          description: retruns an array with the product object
        "400":
          description: indicates that the products has not been uploaded
  /api/products/{pid}:
    put:
      summary: Update a product property
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: id of the product
      requestBody:
        description: Product data to upload
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                field:
                  type: string
                edit:
                  type: string
                  description: can be any value
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    default: "success"
                    description: indicates if the creation was succesful
                  product:
                    $ref: '#/components/schemas/Product'
          description: retruns an array with the product object edited
        "400":
          description: indicates that the products has not been edited becuse wrong data type of the field
          content:
            application/json:
               schema:
                type: object
                properties:
                  status:
                    type: string
                    default: error
                  message:
                    type: string
                    description: message of thjje error that ocurred
/api/products/{pid}:
    delete:
      summary: Delete the product of the product id given
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: id of the product
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    default: "success"
                    description: indicates if the deletion was succesful
                  product:
                    $ref: '#/components/schemas/Product'
          description: retruns an array with the product object that was deleted
        "400":
          description: indicates that the products has not been deleted bescuse data is wrong
          content:
            application/json:
               schema:
                type: object
                properties:
                  status:
                    type: string
                    default: error
                  message:
                    type: string
                    description: message of the error that ocurred
  

components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id generated by mongo
        title:
          type: string
          description: title of the product
        description:
          type: string
          description: description of the product
        price:
          type: number
          description: price of the product
        thumbnail:
          type: array
          items:
            type: string
            format: uri
          description: array of url of images of the product
        stock:
          type: number
          description: numer of product in existance 
        code:
          type: number
          description: unique code for the product identification
        status:
          type: boolean
          description: boolean estate that indicates if is available or not
        category:
          type: string
          description: category of the product 
        owner:
          type: string
          description: mongo id of the person that create the product
      required: 
        - _id
        - title
        - description
        - price
        - thumbnail
        - stock
        - code
        - status
        - category
        - owner
      example:
        _id: 66466eaf30b04d3dd1c6bd38
        title: Tomate
        description: "El tomate es rico en minerales esenciales, que nos ayudan a sentirnos fuertes y con energ√≠a."
        price: 587
        thumbnail: [
          "https://firebasestorage.googleapis.com/v0/b/tienda-mastergym.appspot.com/o/Prouctmanager%2Ftomate.jpeg?alt=media&token=80320653-1e2b-41df-b737-02cb2996ac9e"
        ]
        stock: 98
        code: 578921
        status: true
        category: Verdura
        owner: 662d90d4fba2929ccc5ac612



